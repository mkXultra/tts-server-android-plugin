[
  {
    "version": 1,
    "name": "讯飞付费",
    "pluginId": "cn.xfyun.tts",
    "author": "TTS Server",
    "code": "let hostUrl = \"wss://tts-api.xfyun.cn/v2/tts\"\nlet appId = ttsrv.userVars[\"appId\"]\nlet apiKey = ttsrv.userVars[\"apiKey\"]\nlet apiSecret = ttsrv.userVars[\"apiSecret\"]\n\nlet sampleRate = 16000\n\nlet PluginJS = {\n    \"name\": \"讯飞付费\",\n    \"id\": \"cn.xfyun.tts\",\n    \"author\": \"TTS Server\",\n    \"description\": \"\",\n    \"version\": 1,\n\n    \"vars\":{\n        appId:{label:\"AppID\"},\n        apiKey: {label:\"ApiKey\"},\n        apiSecret: {label: \"ApiSecret\"}\n    },\n\n    \"getAudio\": function (text, locale, voice, rate, volume, pitch) {\n        return getAudio(text, voice, rate, volume, pitch)\n    },\n}\n\nfunction sha256(signString, apiSecret) {\n    let aly = new JavaImporter(\n        javax.crypto.Mac,\n        javax.crypto.spec.SecretKeySpec,\n    );\n    with (aly) {\n        let secretKeySpec = new SecretKeySpec(ttsrv.strToBytes(apiSecret), \"HmacSHA256\");\n        var mac = Mac.getInstance('HmacSHA256');\n        mac.init(secretKeySpec)\n        var signData = mac.doFinal(ttsrv.strToBytes(new java.lang.String(signString)));\n        return signData\n    }\n}\n\nfunction getReqUrl(hostUrl, apiKey, apiSecret) {\n    let uri = new java.net.URI(hostUrl)\n    let host = uri.getHost()\n    let path = uri.getPath()\n\n    const date = new Date().toUTCString()\n    const signString = `host: ${host}\\ndate: ${date}\\nGET ${path} HTTP/1.1`;\n    let sha = ttsrv.base64Encode(sha256(signString, apiSecret))\n    const authUrl = `api_key=\"${apiKey}\", algorithm=\"hmac-sha256\", headers=\"host date request-line\", signature=\"${sha}\"`;\n    const authorization = ttsrv.base64Encode(authUrl);\n\n    const params = [];\n    params.push('authorization=' + encodeURIComponent(authorization));\n    params.push('date=' + encodeURIComponent(date));\n    params.push('host=' + encodeURIComponent(host));\n    const queryString = params.join('&');\n\n    return `${hostUrl}?${queryString}`\n}\n\n\nlet ws = null\nlet wsUuid = \"\"\n\nfunction checkWebSocket() {\n    logger.i(\"init Websocket\")\n\n    url = getReqUrl(hostUrl, apiKey, apiSecret)\n    ws = JWebSocket(new java.lang.String(url), {})\n    ws.onThrowable = function (t) {\n        logger.e(\"onThrowable: \" + t)\n    }\n}\n\nfunction getAudio(text, voice, rate, volume, pitch) {\n    if (voice === null || voice === \"\") {\n        voice = \"xiaoyan\"\n    }\n\n    checkWebSocket()\n    let pos = new java.io.PipedOutputStream()\n\n    ws.onOpen = function (response) {\n        logger.i(\"onOpen: \" + response)\n        sendMessage()\n    }\n\n    ws.onFailure = function (t) {\n        logger.e(\"onFailure: \" + t)\n        pos.close()\n        throw \"Websocket失败: \" + t\n    }\n\n    ws.onTextMessage = function (str) {\n        let result = JSON.parse(str)\n        if (result.code === 0) {\n            if (result.data.audio != null){\n                let audio = ttsrv.base64DecodeToBytes(result.data.audio)\n\n                pos.write(audio)\n            }\n\n            if (result.data.status === 2){\n                pos.close()\n                ws.close(1000)\n            }\n        }\n    }\n\n    ws.onClosing = function (code, reason) {\n        logger.e(\"onClosing: \" + code + reason)\n        if (code != 1000){\n            throw \"Websocket关闭: \" + code + reason\n        }\n    }\n\n    ws.onClosed = function (code, reason) {\n        logger.e(\"onClosed: \" + code + reason)\n        pos.close()\n    }\n\n    if (ws.state === JWebSocket.OPEN) {\n        sendMessage()\n    } else {\n        logger.d(\"connect...\")\n        ws.connect()\n    }\n\n    function sendMessage() {\n        logger.i(\"sendMessage....\")\n\n        let isRaw = ttsrv.tts.data[\"raw\"] == \"true\"\n      let reqBody = {\n        \"common\": {\n          \"app_id\": appId\n        },\n        \"business\": {\n          \"aue\": \"lame\",\n          \"sfl\": 1,\n          \"vcn\": voice,\n          \"volume\": volume,\n          \"pitch\": pitch,\n          \"speed\": rate,\n          \"bgs\": ttsrv.tts.data[\"bgm\"] == \"true\" ? 1 : 0,\n          \"tte\": \"UTF8\",\n        },\n        \"data\": {\n          \"status\": 2,\n          \"text\": ttsrv.base64Encode(text),\n        }\n      }\n\n        let reqStrMsg = JSON.stringify(reqBody)\n        ws.send(reqStrMsg)\n    }\n\n    return new java.io.PipedInputStream(pos)\n}\n\n\n// 全部voice数据\nlet voices = {}\n// 当前语言下的voice\nlet currentVoices = new Map()\n\nlet EditorJS = {\n    //音频的采样率 编辑TTS界面保存时调用\n    \"getAudioSampleRate\": function (locale, voice) {\n        // 根据voice判断返回的采样率\n        // 也可以动态获取：\n        return sampleRate\n    },\n\n    \"getLocales\": function () {\n        return [\"zh-CN\"]\n    },\n\n    // 当语言变更时调用\n    \"getVoices\": function (locale) {\n        return {\"xiaoyan\": \"讯飞小燕\",\n            \"aisjiuxu\": \"讯飞许久\",\n            \"aisxping\": \"讯飞小萍\",\n            \"aisjinger\": \"讯飞小婧\",\n            \"aisbabyxu\": \"讯飞许小宝\",\n            \"ais111\": \"以下为特色发音人 4.28到期\",\n            \"x4_lingfeizhe_zl\": \"聆飞哲\",\n            \"x4_lingxiaoyao_comic\":\"聆小瑶-幽默\",\n            \"x4_lingxiaoyao_em\": '聆小瑶-情感',\n            \"x4_lingxiaoyao_en\": '聆小瑶-助理',\n            \"x3_yifei\": \"讯飞一菲\",\n            \"x_laoma\": \"讯飞马叔\",\n            \"x_yuanye\": \"讯飞易阳泽(原野)\",\n            \"x2_xiaowan\": \"讯飞小婉\",\n            \"x3_guanshan\": \"讯飞关山\",\n            \"x3_guanshan_talk\": \"讯飞关山-对话\",\n            \"x3_qianxue\": \"讯飞千雪\",\n            \"x_dahuilang\": \"讯飞大灰狼\",\n       }\n    },\n\n    \"onLoadData\": function () {},\n\n    \"onLoadUI\": function (ctx, linerLayout) {\n        let cb = new CheckBox(ctx)\n        cb.setText(\"背景音乐（仅特色发音人支持）\")\n        cb.setChecked(ttsrv.tts.data[\"bgm\"] == \"true\")\n        cb.setOnCheckedChangeListener(function (view, isChecked) {\n            ttsrv.tts.data[\"bgm\"] = isChecked + ''\n        })\n        linerLayout.addView(cb)\n        ttsrv.setMargins(cb, 0, 8, 10, 0)\n    },\n\n    \"onVoiceChanged\": function (locale, voiceCode) {\n\n    }\n\n}\n\n",
    "defVars": {
      "appId": {
        "label": "AppID"
      },
      "apiKey": {
        "label": "ApiKey"
      },
      "apiSecret": {
        "label": "ApiSecret"
      }
    }
  }
]